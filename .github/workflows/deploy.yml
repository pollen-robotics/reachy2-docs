# Deploy your Hyas site to GitHub Pages
name: GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows manual workflow execution from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

# Ensure only one concurrent deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default shell for all jobs
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build production website
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          npm run build \
            -- \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Verify build output
        run: ls -la ./public  # Debugging step to verify files exist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          name: github-pages  # Explicitly setting artifact name

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: https://pollen-robotics.github.io/reachy2-docs/
    steps:
      - name: Debug GitHub environment
        run: |
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"

      - name: Download Artifact (Ensure it exists)
        uses: actions/download-artifact@v3
        with:
          name: github-pages  # Match artifact name
          path: ./public

      - name: Verify Downloaded Artifact
        run: ls -la ./public  # Debugging step to confirm files exist before deployment

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

